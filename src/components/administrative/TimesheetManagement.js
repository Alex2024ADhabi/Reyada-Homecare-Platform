import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useEffect } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "@/components/ui/select";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow, } from "@/components/ui/table";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Calendar, Clock, DollarSign, FileText, TrendingUp, CheckCircle, XCircle, AlertCircle, Download, RefreshCw, Plus, } from "lucide-react";
import { getTimesheetSummaries, generateTimesheetSummary, approveTimesheet, } from "@/api/attendance.api";
import { useOfflineSync } from "@/hooks/useOfflineSync";
import { toast } from "@/components/ui/use-toast";
import { Smartphone, WifiOff, Database, Shield, BarChart3, } from "lucide-react";
export default function TimesheetManagement({ employeeId, isManager = true, }) {
    const [timesheets, setTimesheets] = useState([]);
    const [loading, setLoading] = useState(false);
    const [selectedPeriod, setSelectedPeriod] = useState({
        start: new Date(new Date().getFullYear(), new Date().getMonth(), 1)
            .toISOString()
            .split("T")[0],
        end: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)
            .toISOString()
            .split("T")[0],
    });
    const [filters, setFilters] = useState({
        employee_id: employeeId || "",
        department: "",
        pay_period_start: selectedPeriod.start,
        pay_period_end: selectedPeriod.end,
    });
    const [overtimeAnalysis, setOvertimeAnalysis] = useState({
        totalOvertimeHours: 245,
        overtimeCost: 18375,
        averageOvertimePerEmployee: 5.4,
        overtimeTrend: "increasing",
        topOvertimeEmployees: [
            { name: "Sarah Johnson", hours: 18.5, cost: 1387.5 },
            { name: "Ahmed Al Mansouri", hours: 16.2, cost: 1215 },
            { name: "Maria Garcia", hours: 14.8, cost: 1110 },
        ],
    });
    const [laborCostAnalysis, setLaborCostAnalysis] = useState({
        totalLaborCost: 156750,
        regularPayCost: 138375,
        overtimeCost: 18375,
        benefitsCost: 23512.5,
        costPerHour: 45.2,
        budgetVariance: -2.3, // percentage
        projectedMonthlyCost: 162450,
    });
    const [payrollIntegration, setPayrollIntegration] = useState({
        systemConnected: true,
        lastSync: new Date().toISOString(),
        pendingTransactions: 3,
        autoProcessingEnabled: true,
        complianceStatus: "compliant",
    });
    const [workforceMetrics, setWorkforceMetrics] = useState({
        totalActiveEmployees: 45,
        mobileAppUsers: 38,
        averageProductivity: 87.5,
        attendanceRate: 94.2,
        overtimeUtilization: 12.8,
    });
    const [mobileTimeTracking, setMobileTimeTracking] = useState({
        activeUsers: 38,
        todayCheckIns: 42,
        gpsVerifiedEntries: 156,
        biometricAuthentications: 142,
        offlineEntriesPending: 8,
        averageAccuracy: 98.5,
        batteryOptimizationEnabled: true,
        geofencingActive: true,
    });
    const { isOnline } = useOfflineSync();
    useEffect(() => {
        loadTimesheets();
    }, [filters]);
    const loadTimesheets = async () => {
        try {
            setLoading(true);
            const data = await getTimesheetSummaries(filters);
            setTimesheets(data);
            toast({
                title: "Timesheets loaded",
                description: `Found ${data.length} timesheet records`,
            });
        }
        catch (error) {
            console.error("Error loading timesheets:", error);
            toast({
                title: "Error loading timesheets",
                description: error instanceof Error
                    ? error.message
                    : "Failed to load timesheet data",
                variant: "destructive",
            });
        }
        finally {
            setLoading(false);
        }
    };
    const handleGenerateTimesheet = async (employeeId) => {
        if (!employeeId && !filters.employee_id) {
            toast({
                title: "Employee ID required",
                description: "Please specify an employee ID to generate timesheet",
                variant: "destructive",
            });
            return;
        }
        const targetEmployeeId = employeeId || filters.employee_id;
        // Validate date range
        if (!selectedPeriod.start || !selectedPeriod.end) {
            toast({
                title: "Invalid date range",
                description: "Please select valid start and end dates",
                variant: "destructive",
            });
            return;
        }
        try {
            setLoading(true);
            await generateTimesheetSummary(targetEmployeeId, selectedPeriod.start, selectedPeriod.end);
            toast({
                title: "Timesheet generated",
                description: `Timesheet generated successfully for employee ${targetEmployeeId}`,
            });
            await loadTimesheets();
        }
        catch (error) {
            console.error("Error generating timesheet:", error);
            toast({
                title: "Error generating timesheet",
                description: error instanceof Error
                    ? error.message
                    : "Failed to generate timesheet",
                variant: "destructive",
            });
        }
        finally {
            setLoading(false);
        }
    };
    const handleApproveTimesheet = async (id, employeeName) => {
        if (!isOnline) {
            toast({
                title: "Offline mode",
                description: "Timesheet approval requires internet connection",
                variant: "destructive",
            });
            return;
        }
        try {
            setLoading(true);
            await approveTimesheet(id, "Dr. Sarah Ahmed");
            toast({
                title: "Timesheet approved",
                description: `Timesheet for ${employeeName} has been approved successfully`,
            });
            await loadTimesheets();
        }
        catch (error) {
            console.error("Error approving timesheet:", error);
            toast({
                title: "Error approving timesheet",
                description: error instanceof Error
                    ? error.message
                    : "Failed to approve timesheet",
                variant: "destructive",
            });
        }
        finally {
            setLoading(false);
        }
    };
    const getApprovalBadge = (status) => {
        const variants = {
            approved: "default",
            submitted: "secondary",
            draft: "outline",
            rejected: "destructive",
        };
        const icons = {
            approved: _jsx(CheckCircle, { className: "w-3 h-3" }),
            submitted: _jsx(Clock, { className: "w-3 h-3" }),
            draft: _jsx(FileText, { className: "w-3 h-3" }),
            rejected: _jsx(XCircle, { className: "w-3 h-3" }),
        };
        return (_jsxs(Badge, { variant: variants[status] || "outline", className: "flex items-center gap-1", children: [icons[status], status] }));
    };
    const calculateTotals = () => {
        return timesheets.reduce((acc, timesheet) => {
            acc.totalHours += timesheet.total_worked_hours;
            acc.totalOvertimeHours += timesheet.total_overtime_hours;
            acc.totalPay += timesheet.total_pay;
            acc.totalNetPay += timesheet.net_pay;
            return acc;
        }, {
            totalHours: 0,
            totalOvertimeHours: 0,
            totalPay: 0,
            totalNetPay: 0,
        });
    };
    const totals = calculateTotals();
    return (_jsx("div", { className: "min-h-screen bg-gray-50 p-6", children: _jsxs("div", { className: "max-w-7xl mx-auto space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold text-gray-900", children: "Timesheet Management" }), _jsx("p", { className: "text-gray-600 mt-1", children: "Manage employee timesheets and payroll processing" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [!isOnline && (_jsxs(Badge, { variant: "destructive", className: "flex items-center gap-1", children: [_jsx(AlertCircle, { className: "w-3 h-3" }), "Offline Mode - Limited Functionality"] })), _jsxs(Button, { disabled: !isOnline || loading, children: [_jsx(Download, { className: "w-4 h-4 mr-2" }), "Export Report"] })] })] }), _jsxs(Card, { className: "border-green-200 bg-green-50", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "text-green-800 flex items-center", children: [_jsx(Database, { className: "w-5 h-5 mr-2" }), "Payroll System Integration"] }), _jsx(CardDescription, { children: "Real-time payroll processing and compliance monitoring" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-5 gap-4", children: [_jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsx("div", { className: "text-2xl font-bold text-green-700", children: _jsx(CheckCircle, { className: "w-8 h-8 mx-auto mb-2" }) }), _jsx("div", { className: "text-sm text-gray-600", children: "System Status" }), _jsx("div", { className: "text-xs text-green-600 mt-1", children: payrollIntegration.systemConnected
                                                    ? "Connected"
                                                    : "Disconnected" })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsx("div", { className: "text-2xl font-bold text-blue-700", children: payrollIntegration.pendingTransactions }), _jsx("div", { className: "text-sm text-gray-600", children: "Pending Transactions" }), _jsx("div", { className: "text-xs text-gray-500 mt-1", children: "Awaiting processing" })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsx("div", { className: "text-2xl font-bold text-purple-700", children: new Date(payrollIntegration.lastSync).toLocaleDateString() }), _jsx("div", { className: "text-sm text-gray-600", children: "Last Sync" }), _jsx("div", { className: "text-xs text-gray-500 mt-1", children: "Real-time sync" })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsx("div", { className: "text-lg font-bold", children: _jsx(Badge, { variant: payrollIntegration.autoProcessingEnabled
                                                        ? "default"
                                                        : "secondary", children: payrollIntegration.autoProcessingEnabled
                                                        ? "Enabled"
                                                        : "Disabled" }) }), _jsx("div", { className: "text-sm text-gray-600 mt-1", children: "Auto Processing" })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsx("div", { className: "text-lg font-bold", children: _jsx(Badge, { variant: payrollIntegration.complianceStatus === "compliant"
                                                        ? "default"
                                                        : "destructive", children: payrollIntegration.complianceStatus === "compliant"
                                                        ? "Compliant"
                                                        : "Non-Compliant" }) }), _jsx("div", { className: "text-sm text-gray-600 mt-1", children: "Compliance" })] })] }) })] }), _jsxs(Card, { className: "border-blue-200 bg-blue-50", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "text-blue-800 flex items-center", children: [_jsx(BarChart3, { className: "w-5 h-5 mr-2" }), "Workforce Analytics & Metrics"] }), _jsx(CardDescription, { children: "Real-time workforce performance and productivity insights" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-5 gap-4", children: [_jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsx("div", { className: "text-2xl font-bold text-blue-700", children: workforceMetrics.totalActiveEmployees }), _jsx("div", { className: "text-sm text-gray-600", children: "Active Employees" }), _jsx("div", { className: "text-xs text-blue-600 mt-1", children: "Full workforce" })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsx("div", { className: "text-2xl font-bold text-green-700", children: workforceMetrics.mobileAppUsers }), _jsx("div", { className: "text-sm text-gray-600", children: "Mobile Users" }), _jsxs("div", { className: "text-xs text-green-600 mt-1", children: [Math.round((workforceMetrics.mobileAppUsers /
                                                        workforceMetrics.totalActiveEmployees) *
                                                        100), "% adoption"] })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsxs("div", { className: "text-2xl font-bold text-purple-700", children: [workforceMetrics.averageProductivity, "%"] }), _jsx("div", { className: "text-sm text-gray-600", children: "Avg Productivity" }), _jsx("div", { className: "text-xs text-purple-600 mt-1", children: "Above target" })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsxs("div", { className: "text-2xl font-bold text-orange-700", children: [workforceMetrics.attendanceRate, "%"] }), _jsx("div", { className: "text-sm text-gray-600", children: "Attendance Rate" }), _jsx("div", { className: "text-xs text-orange-600 mt-1", children: "Excellent" })] }), _jsxs("div", { className: "text-center p-4 bg-white rounded border", children: [_jsxs("div", { className: "text-2xl font-bold text-red-700", children: [workforceMetrics.overtimeUtilization, "%"] }), _jsx("div", { className: "text-sm text-gray-600", children: "Overtime Usage" }), _jsx("div", { className: "text-xs text-red-600 mt-1", children: "Within limits" })] })] }) })] }), _jsxs(Tabs, { defaultValue: "timesheets", className: "space-y-6", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-7", children: [_jsx(TabsTrigger, { value: "timesheets", children: "Timesheets" }), _jsx(TabsTrigger, { value: "mobile", children: "Mobile Tracking" }), _jsx(TabsTrigger, { value: "overtime", children: "Overtime Management" }), _jsx(TabsTrigger, { value: "labor-costs", children: "Labor Cost Analysis" }), _jsx(TabsTrigger, { value: "payroll", children: "Payroll Integration" }), _jsx(TabsTrigger, { value: "analytics", children: "Workforce Analytics" }), _jsx(TabsTrigger, { value: "reports", children: "Reports" })] }), _jsxs(TabsContent, { value: "timesheets", className: "space-y-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Filter Timesheets" }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "payPeriodStart", children: "Pay Period Start" }), _jsx(Input, { id: "payPeriodStart", type: "date", value: filters.pay_period_start || "", onChange: (e) => {
                                                                        const newStart = e.target.value;
                                                                        setFilters({ ...filters, pay_period_start: newStart });
                                                                        setSelectedPeriod({
                                                                            ...selectedPeriod,
                                                                            start: newStart,
                                                                        });
                                                                    } })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "payPeriodEnd", children: "Pay Period End" }), _jsx(Input, { id: "payPeriodEnd", type: "date", value: filters.pay_period_end || "", onChange: (e) => {
                                                                        const newEnd = e.target.value;
                                                                        setFilters({ ...filters, pay_period_end: newEnd });
                                                                        setSelectedPeriod({ ...selectedPeriod, end: newEnd });
                                                                    } })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "department", children: "Department" }), _jsxs(Select, { value: filters.department || "", onValueChange: (value) => setFilters({ ...filters, department: value }), children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "All Departments" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "", children: "All Departments" }), _jsx(SelectItem, { value: "Nursing", children: "Nursing" }), _jsx(SelectItem, { value: "Therapy", children: "Therapy" }), _jsx(SelectItem, { value: "Administration", children: "Administration" })] })] })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "employee", children: "Employee" }), _jsx(Input, { id: "employee", placeholder: "Employee ID", value: filters.employee_id || "", onChange: (e) => setFilters({ ...filters, employee_id: e.target.value }) })] })] }), _jsxs("div", { className: "flex gap-2 mt-4", children: [_jsxs(Button, { onClick: () => handleGenerateTimesheet(), disabled: loading || !isOnline, children: [_jsx(Plus, { className: "w-4 h-4 mr-2" }), loading ? "Generating..." : "Generate Timesheet"] }), _jsxs(Button, { variant: "outline", onClick: loadTimesheets, disabled: loading, children: [_jsx(RefreshCw, { className: `w-4 h-4 mr-2 ${loading ? "animate-spin" : ""}` }), "Refresh"] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Employee Timesheets" }), _jsxs(CardDescription, { children: [timesheets.length, " timesheets found"] })] }), _jsx(CardContent, { children: _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Employee" }), _jsx(TableHead, { children: "Pay Period" }), _jsx(TableHead, { children: "Worked Hours" }), _jsx(TableHead, { children: "Overtime" }), _jsx(TableHead, { children: "Regular Pay" }), _jsx(TableHead, { children: "Total Pay" }), _jsx(TableHead, { children: "Net Pay" }), _jsx(TableHead, { children: "Status" }), _jsx(TableHead, { children: "Actions" })] }) }), _jsx(TableBody, { children: loading ? (_jsx(TableRow, { children: _jsx(TableCell, { colSpan: 9, className: "text-center py-8", children: _jsxs("div", { className: "flex items-center justify-center space-x-2", children: [_jsx(RefreshCw, { className: "w-4 h-4 animate-spin" }), _jsx("span", { children: "Loading timesheets..." })] }) }) })) : timesheets.length === 0 ? (_jsx(TableRow, { children: _jsx(TableCell, { colSpan: 9, className: "text-center py-8 text-gray-500", children: _jsxs("div", { className: "flex flex-col items-center space-y-2", children: [_jsx(FileText, { className: "w-8 h-8 text-gray-400" }), _jsx("span", { children: "No timesheets found" }), _jsx("span", { className: "text-sm", children: "Try adjusting your filters or generate new timesheets" })] }) }) })) : (timesheets.map((timesheet) => (_jsxs(TableRow, { children: [_jsx(TableCell, { children: _jsxs("div", { children: [_jsx("div", { className: "font-medium", children: timesheet.employee_name }), _jsxs("div", { className: "text-sm text-gray-500", children: [timesheet.role, " - ", timesheet.department] })] }) }), _jsx(TableCell, { children: _jsxs("div", { className: "text-sm", children: [timesheet.pay_period_start, " to", " ", timesheet.pay_period_end] }) }), _jsx(TableCell, { children: _jsxs("div", { children: [_jsxs("div", { className: "font-medium", children: [timesheet.total_worked_hours, "h"] }), _jsxs("div", { className: "text-xs text-gray-500", children: ["of ", timesheet.total_scheduled_hours, "h scheduled"] })] }) }), _jsx(TableCell, { children: _jsxs("div", { className: "font-medium", children: [timesheet.total_overtime_hours, "h"] }) }), _jsx(TableCell, { children: _jsxs("div", { className: "font-medium", children: ["AED ", timesheet.regular_pay.toFixed(2)] }) }), _jsxs(TableCell, { children: [_jsxs("div", { className: "font-medium", children: ["AED ", timesheet.total_pay.toFixed(2)] }), timesheet.overtime_pay > 0 && (_jsxs("div", { className: "text-xs text-green-600", children: ["+AED ", timesheet.overtime_pay.toFixed(2), " OT"] }))] }), _jsxs(TableCell, { children: [_jsxs("div", { className: "font-medium", children: ["AED ", timesheet.net_pay.toFixed(2)] }), timesheet.deductions > 0 && (_jsxs("div", { className: "text-xs text-red-600", children: ["-AED ", timesheet.deductions.toFixed(2), " ", "deductions"] }))] }), _jsx(TableCell, { children: getApprovalBadge(timesheet.approval_status) }), _jsx(TableCell, { children: _jsxs("div", { className: "flex gap-1", children: [timesheet.approval_status === "submitted" &&
                                                                                    isManager && (_jsxs(Button, { size: "sm", onClick: () => handleApproveTimesheet(timesheet._id.toString(), timesheet.employee_name), disabled: loading || !isOnline, children: [_jsx(CheckCircle, { className: "w-3 h-3 mr-1" }), loading ? "Approving..." : "Approve"] })), _jsx(Button, { size: "sm", variant: "outline", children: "View" })] }) })] }, timesheet._id?.toString())))) })] }) }) })] })] }), _jsxs(TabsContent, { value: "mobile", className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold", children: "Mobile Time Tracking & Attendance Management" }), _jsx("p", { className: "text-sm text-gray-600", children: "Real-time mobile attendance tracking with GPS and biometric verification" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Button, { variant: "outline", children: [_jsx(Smartphone, { className: "w-4 h-4 mr-2" }), "Mobile App Settings"] }), _jsxs(Button, { children: [_jsx(Download, { className: "w-4 h-4 mr-2" }), "Download App"] })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs(Card, { className: "border-green-200 bg-green-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-green-800 flex items-center gap-2", children: [_jsx(Smartphone, { className: "w-4 h-4" }), "Active Mobile Users"] }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-green-900", children: workforceMetrics.mobileAppUsers }), _jsxs("p", { className: "text-xs text-green-600", children: [Math.round((workforceMetrics.mobileAppUsers /
                                                                    workforceMetrics.totalActiveEmployees) *
                                                                    100), "% of workforce"] })] })] }), _jsxs(Card, { className: "border-blue-200 bg-blue-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-blue-800 flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4" }), "GPS Verified Check-ins"] }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-blue-900", children: "156" }), _jsx("p", { className: "text-xs text-blue-600", children: "Today" })] })] }), _jsxs(Card, { className: "border-purple-200 bg-purple-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-purple-800 flex items-center gap-2", children: [_jsx(Shield, { className: "w-4 h-4" }), "Biometric Authentications"] }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-purple-900", children: "142" }), _jsx("p", { className: "text-xs text-purple-600", children: "Secure logins today" })] })] }), _jsxs(Card, { className: "border-orange-200 bg-orange-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-orange-800 flex items-center gap-2", children: [_jsx(WifiOff, { className: "w-4 h-4" }), "Offline Entries"] }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-orange-900", children: "8" }), _jsx("p", { className: "text-xs text-orange-600", children: "Pending sync" })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Mobile App Features & Usage" }), _jsx(CardDescription, { children: "Comprehensive mobile time tracking capabilities with advanced features" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h4", { className: "font-medium", children: "Core Features" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "GPS Location Tracking" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Biometric Authentication" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Offline Mode Support" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Photo Verification" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Geofencing" })] }), _jsx(Badge, { variant: mobileTimeTracking.geofencingActive
                                                                                    ? "default"
                                                                                    : "secondary", children: mobileTimeTracking.geofencingActive
                                                                                    ? "Active"
                                                                                    : "Inactive" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Battery Optimization" })] }), _jsx(Badge, { variant: mobileTimeTracking.batteryOptimizationEnabled
                                                                                    ? "default"
                                                                                    : "secondary", children: mobileTimeTracking.batteryOptimizationEnabled
                                                                                    ? "Enabled"
                                                                                    : "Disabled" })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h4", { className: "font-medium", children: "Usage Statistics" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Daily Active Users:" }), _jsxs("span", { className: "font-medium", children: [mobileTimeTracking.activeUsers, "/", workforceMetrics.totalActiveEmployees] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Today's Check-ins:" }), _jsx("span", { className: "font-medium text-green-600", children: mobileTimeTracking.todayCheckIns })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "GPS Accuracy Rate:" }), _jsxs("span", { className: "font-medium text-green-600", children: [mobileTimeTracking.averageAccuracy, "%"] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Biometric Success Rate:" }), _jsx("span", { className: "font-medium text-green-600", children: "96.2%" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Offline Entries Pending:" }), _jsx("span", { className: "font-medium text-orange-600", children: mobileTimeTracking.offlineEntriesPending })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "GPS Verified Entries:" }), _jsx("span", { className: "font-medium text-blue-600", children: mobileTimeTracking.gpsVerifiedEntries })] })] })] })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Recent Mobile Activity" }), _jsx(CardDescription, { children: "Latest mobile check-ins and activities" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-2 h-2 bg-green-500 rounded-full" }), _jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Sarah Johnson - Check In" }), _jsx("div", { className: "text-xs text-gray-600", children: "Patient Home - Al Wasl Road \u2022 GPS Verified" })] })] }), _jsx("div", { className: "text-xs text-gray-500", children: "2 min ago" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-blue-50 border border-blue-200 rounded", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-2 h-2 bg-blue-500 rounded-full" }), _jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Ahmed Al Mansouri - Break End" }), _jsx("div", { className: "text-xs text-gray-600", children: "Clinic Location \u2022 Biometric Verified" })] })] }), _jsx("div", { className: "text-xs text-gray-500", children: "15 min ago" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-orange-50 border border-orange-200 rounded", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-2 h-2 bg-orange-500 rounded-full" }), _jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Maria Garcia - Offline Sync" }), _jsx("div", { className: "text-xs text-gray-600", children: "3 entries synced successfully" })] })] }), _jsx("div", { className: "text-xs text-gray-500", children: "1 hour ago" })] })] }) })] })] }), _jsxs(TabsContent, { value: "overtime", className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs(Card, { className: "border-orange-200 bg-orange-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-orange-800 flex items-center gap-2", children: [_jsx(Clock, { className: "w-4 h-4" }), "Total Overtime Hours"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-orange-900", children: [overtimeAnalysis.totalOvertimeHours, "h"] }), _jsxs("p", { className: "text-xs text-orange-600", children: ["Avg ", overtimeAnalysis.averageOvertimePerEmployee, "h per employee"] })] })] }), _jsxs(Card, { className: "border-red-200 bg-red-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-red-800 flex items-center gap-2", children: [_jsx(DollarSign, { className: "w-4 h-4" }), "Overtime Cost"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-red-900", children: ["AED ", overtimeAnalysis.overtimeCost.toLocaleString()] }), _jsxs("p", { className: "text-xs text-red-600", children: [overtimeAnalysis.overtimeTrend === "increasing"
                                                                    ? "↗"
                                                                    : "↘", " ", overtimeAnalysis.overtimeTrend] })] })] }), _jsxs(Card, { className: "border-purple-200 bg-purple-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-purple-800 flex items-center gap-2", children: [_jsx(TrendingUp, { className: "w-4 h-4" }), "Cost per Hour"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-purple-900", children: ["AED", " ", Math.round(overtimeAnalysis.overtimeCost /
                                                                    overtimeAnalysis.totalOvertimeHours)] }), _jsx("p", { className: "text-xs text-purple-600", children: "1.5x regular rate" })] })] }), _jsxs(Card, { className: "border-blue-200 bg-blue-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-blue-800 flex items-center gap-2", children: [_jsx(AlertCircle, { className: "w-4 h-4" }), "High OT Employees"] }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-blue-900", children: overtimeAnalysis.topOvertimeEmployees.length }), _jsx("p", { className: "text-xs text-blue-600", children: "Require attention" })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Top Overtime Employees" }), _jsx(CardDescription, { children: "Employees with highest overtime hours this period" })] }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: overtimeAnalysis.topOvertimeEmployees.map((employee, index) => (_jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg bg-yellow-50 border-yellow-200", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsxs("div", { className: "w-8 h-8 bg-yellow-200 rounded-full flex items-center justify-center text-yellow-800 font-bold text-sm", children: ["#", index + 1] }), _jsxs("div", { children: [_jsx("div", { className: "font-medium", children: employee.name }), _jsxs("div", { className: "text-sm text-gray-500", children: [employee.hours, "h overtime"] })] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "font-medium text-red-600", children: ["AED ", employee.cost.toLocaleString()] }), _jsx("div", { className: "text-sm text-gray-500", children: "Overtime cost" })] })] }, index))) }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Overtime Management Actions" }), _jsx(CardDescription, { children: "Tools to manage and reduce overtime costs" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(AlertCircle, { className: "w-6 h-6 text-orange-600" }), _jsx("span", { children: "Set OT Alerts" })] }), _jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(Calendar, { className: "w-6 h-6 text-blue-600" }), _jsx("span", { children: "Schedule Optimization" })] }), _jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(FileText, { className: "w-6 h-6 text-green-600" }), _jsx("span", { children: "OT Report" })] })] }) })] })] }), _jsxs(TabsContent, { value: "labor-costs", className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs(Card, { className: "border-green-200 bg-green-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-green-800 flex items-center gap-2", children: [_jsx(DollarSign, { className: "w-4 h-4" }), "Total Labor Cost"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-green-900", children: ["AED ", laborCostAnalysis.totalLaborCost.toLocaleString()] }), _jsx("p", { className: "text-xs text-green-600", children: "This pay period" })] })] }), _jsxs(Card, { className: "border-blue-200 bg-blue-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-blue-800 flex items-center gap-2", children: [_jsx(Clock, { className: "w-4 h-4" }), "Regular Pay"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-blue-900", children: ["AED ", laborCostAnalysis.regularPayCost.toLocaleString()] }), _jsxs("p", { className: "text-xs text-blue-600", children: [Math.round((laborCostAnalysis.regularPayCost /
                                                                    laborCostAnalysis.totalLaborCost) *
                                                                    100), "% of total"] })] })] }), _jsxs(Card, { className: "border-orange-200 bg-orange-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-sm font-medium text-orange-800 flex items-center gap-2", children: [_jsx(TrendingUp, { className: "w-4 h-4" }), "Benefits Cost"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-orange-900", children: ["AED ", laborCostAnalysis.benefitsCost.toLocaleString()] }), _jsx("p", { className: "text-xs text-orange-600", children: "15% of gross pay" })] })] }), _jsxs(Card, { className: `border-2 ${laborCostAnalysis.budgetVariance < 0 ? "border-red-200 bg-red-50" : "border-green-200 bg-green-50"}`, children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: `text-sm font-medium flex items-center gap-2 ${laborCostAnalysis.budgetVariance < 0 ? "text-red-800" : "text-green-800"}`, children: [_jsx(AlertCircle, { className: "w-4 h-4" }), "Budget Variance"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: `text-2xl font-bold ${laborCostAnalysis.budgetVariance < 0 ? "text-red-900" : "text-green-900"}`, children: [laborCostAnalysis.budgetVariance > 0 ? "+" : "", laborCostAnalysis.budgetVariance, "%"] }), _jsx("p", { className: `text-xs ${laborCostAnalysis.budgetVariance < 0 ? "text-red-600" : "text-green-600"}`, children: laborCostAnalysis.budgetVariance < 0
                                                                ? "Over budget"
                                                                : "Under budget" })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Labor Cost Breakdown" }), _jsx(CardDescription, { children: "Detailed analysis of labor costs by category" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-4 h-4 bg-blue-500 rounded" }), _jsx("span", { className: "font-medium", children: "Regular Pay" })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "font-medium", children: ["AED ", laborCostAnalysis.regularPayCost.toLocaleString()] }), _jsxs("div", { className: "text-sm text-gray-500", children: [Math.round((laborCostAnalysis.regularPayCost /
                                                                                laborCostAnalysis.totalLaborCost) *
                                                                                100), "%"] })] })] }), _jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-4 h-4 bg-orange-500 rounded" }), _jsx("span", { className: "font-medium", children: "Overtime Pay" })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "font-medium", children: ["AED ", laborCostAnalysis.overtimeCost.toLocaleString()] }), _jsxs("div", { className: "text-sm text-gray-500", children: [Math.round((laborCostAnalysis.overtimeCost /
                                                                                laborCostAnalysis.totalLaborCost) *
                                                                                100), "%"] })] })] }), _jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-4 h-4 bg-green-500 rounded" }), _jsx("span", { className: "font-medium", children: "Benefits & Insurance" })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "font-medium", children: ["AED ", laborCostAnalysis.benefitsCost.toLocaleString()] }), _jsxs("div", { className: "text-sm text-gray-500", children: [Math.round((laborCostAnalysis.benefitsCost /
                                                                                laborCostAnalysis.totalLaborCost) *
                                                                                100), "%"] })] })] })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Cost Efficiency Metrics" }), _jsx(CardDescription, { children: "Key performance indicators for labor cost management" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsxs("div", { className: "text-center p-4 border rounded-lg", children: [_jsxs("div", { className: "text-2xl font-bold text-blue-600", children: ["AED ", laborCostAnalysis.costPerHour] }), _jsx("div", { className: "text-sm text-gray-600", children: "Cost per Hour" }), _jsx("div", { className: "text-xs text-gray-500 mt-1", children: "Including benefits" })] }), _jsxs("div", { className: "text-center p-4 border rounded-lg", children: [_jsxs("div", { className: "text-2xl font-bold text-purple-600", children: ["AED", " ", laborCostAnalysis.projectedMonthlyCost.toLocaleString()] }), _jsx("div", { className: "text-sm text-gray-600", children: "Projected Monthly" }), _jsx("div", { className: "text-xs text-gray-500 mt-1", children: "Based on current trend" })] }), _jsxs("div", { className: "text-center p-4 border rounded-lg", children: [_jsxs("div", { className: `text-2xl font-bold ${laborCostAnalysis.budgetVariance < 0 ? "text-red-600" : "text-green-600"}`, children: [laborCostAnalysis.budgetVariance > 0 ? "+" : "", laborCostAnalysis.budgetVariance, "%"] }), _jsx("div", { className: "text-sm text-gray-600", children: "Budget Performance" }), _jsx("div", { className: "text-xs text-gray-500 mt-1", children: "vs. planned budget" })] })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Cost Management Tools" }), _jsx(CardDescription, { children: "Actions to optimize labor costs and improve efficiency" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-4", children: [_jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(TrendingUp, { className: "w-6 h-6 text-blue-600" }), _jsx("span", { children: "Cost Forecast" })] }), _jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(AlertCircle, { className: "w-6 h-6 text-orange-600" }), _jsx("span", { children: "Budget Alerts" })] }), _jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(FileText, { className: "w-6 h-6 text-green-600" }), _jsx("span", { children: "Cost Report" })] }), _jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(Calendar, { className: "w-6 h-6 text-purple-600" }), _jsx("span", { children: "Optimize Schedule" })] })] }) })] })] }), _jsxs(TabsContent, { value: "payroll", className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold", children: "Payroll System Integration Capabilities" }), _jsx("p", { className: "text-sm text-gray-600", children: "Seamless integration with payroll systems and automated processing" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Button, { variant: "outline", children: [_jsx(Settings, { className: "w-4 h-4 mr-2" }), "Integration Settings"] }), _jsxs(Button, { children: [_jsx(RefreshCw, { className: "w-4 h-4 mr-2" }), "Sync Now"] })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs(Card, { className: "border-green-200 bg-green-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-green-800", children: "System Status" }) }), _jsx(CardContent, { children: _jsxs("div", { className: "text-center", children: [_jsx(CheckCircle, { className: "w-8 h-8 text-green-600 mx-auto mb-2" }), _jsx("div", { className: "text-sm font-medium", children: "Connected" }), _jsx("div", { className: "text-xs text-green-600", children: "Real-time sync" })] }) })] }), _jsxs(Card, { className: "border-blue-200 bg-blue-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-blue-800", children: "Processed Today" }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-blue-900", children: "127" }), _jsx("p", { className: "text-xs text-blue-600", children: "Payroll entries" })] })] }), _jsxs(Card, { className: "border-orange-200 bg-orange-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-orange-800", children: "Pending Processing" }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-orange-900", children: payrollIntegration.pendingTransactions }), _jsx("p", { className: "text-xs text-orange-600", children: "Awaiting approval" })] })] }), _jsxs(Card, { className: "border-purple-200 bg-purple-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-purple-800", children: "Success Rate" }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold text-purple-900", children: "99.8%" }), _jsx("p", { className: "text-xs text-purple-600", children: "Processing accuracy" })] })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Integration Features" }), _jsx(CardDescription, { children: "Available payroll system capabilities" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Automated Time Calculation" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Overtime Rate Calculation" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Tax Deduction Processing" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Benefits Integration" })] }), _jsx(Badge, { variant: "default", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsx("span", { className: "text-sm", children: "Compliance Reporting" })] }), _jsx(Badge, { variant: "default", children: "Active" })] })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Processing Statistics" }), _jsx(CardDescription, { children: "Payroll processing performance metrics" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Average Processing Time:" }), _jsx("span", { className: "font-medium", children: "2.3 seconds" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Daily Transaction Volume:" }), _jsx("span", { className: "font-medium", children: "127 entries" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Error Rate:" }), _jsx("span", { className: "font-medium text-green-600", children: "0.2%" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "System Uptime:" }), _jsx("span", { className: "font-medium text-green-600", children: "99.9%" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Last Maintenance:" }), _jsx("span", { className: "font-medium", children: "3 days ago" })] })] }) })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Recent Payroll Transactions" }), _jsx(CardDescription, { children: "Latest payroll processing activities" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-green-600" }), _jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Batch Processing Completed" }), _jsx("div", { className: "text-xs text-gray-600", children: "45 employee records processed successfully" })] })] }), _jsx("div", { className: "text-xs text-gray-500", children: "5 min ago" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-blue-50 border border-blue-200 rounded", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx(Clock, { className: "w-4 h-4 text-blue-600" }), _jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Overtime Calculations Updated" }), _jsx("div", { className: "text-xs text-gray-600", children: "Weekly overtime rates recalculated" })] })] }), _jsx("div", { className: "text-xs text-gray-500", children: "1 hour ago" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-purple-50 border border-purple-200 rounded", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx(DollarSign, { className: "w-4 h-4 text-purple-600" }), _jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Tax Deductions Processed" }), _jsx("div", { className: "text-xs text-gray-600", children: "Monthly tax calculations completed" })] })] }), _jsx("div", { className: "text-xs text-gray-500", children: "2 hours ago" })] })] }) })] })] }), _jsxs(TabsContent, { value: "analytics", className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold", children: "Reporting and Analytics for Workforce Metrics" }), _jsx("p", { className: "text-sm text-gray-600", children: "Comprehensive workforce analytics and performance insights" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Button, { variant: "outline", children: [_jsx(BarChart3, { className: "w-4 h-4 mr-2" }), "Custom Reports"] }), _jsxs(Button, { children: [_jsx(Download, { className: "w-4 h-4 mr-2" }), "Export Analytics"] })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs(Card, { className: "border-blue-200 bg-blue-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-blue-800", children: "Productivity Index" }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-blue-900", children: [workforceMetrics.averageProductivity, "%"] }), _jsx(Progress, { value: workforceMetrics.averageProductivity, className: "h-1 mt-2" }), _jsx("p", { className: "text-xs text-blue-600 mt-1", children: "Above target (85%)" })] })] }), _jsxs(Card, { className: "border-green-200 bg-green-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-green-800", children: "Attendance Rate" }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-green-900", children: [workforceMetrics.attendanceRate, "%"] }), _jsx(Progress, { value: workforceMetrics.attendanceRate, className: "h-1 mt-2" }), _jsx("p", { className: "text-xs text-green-600 mt-1", children: "Excellent performance" })] })] }), _jsxs(Card, { className: "border-orange-200 bg-orange-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-orange-800", children: "Overtime Utilization" }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-orange-900", children: [workforceMetrics.overtimeUtilization, "%"] }), _jsx(Progress, { value: workforceMetrics.overtimeUtilization, className: "h-1 mt-2" }), _jsx("p", { className: "text-xs text-orange-600 mt-1", children: "Within limits (15%)" })] })] }), _jsxs(Card, { className: "border-purple-200 bg-purple-50", children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm font-medium text-purple-800", children: "Mobile Adoption" }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold text-purple-900", children: [Math.round((workforceMetrics.mobileAppUsers /
                                                                    workforceMetrics.totalActiveEmployees) *
                                                                    100), "%"] }), _jsx(Progress, { value: (workforceMetrics.mobileAppUsers /
                                                                workforceMetrics.totalActiveEmployees) *
                                                                100, className: "h-1 mt-2" }), _jsx("p", { className: "text-xs text-purple-600 mt-1", children: "High adoption rate" })] })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Performance Trends" }), _jsx(CardDescription, { children: "Key workforce performance indicators over time" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Weekly Productivity" }), _jsx("span", { className: "font-medium text-green-600", children: "+2.3%" })] }), _jsx(Progress, { value: 87.5, className: "h-2" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Monthly Attendance" }), _jsx("span", { className: "font-medium text-green-600", children: "+1.1%" })] }), _jsx(Progress, { value: 94.2, className: "h-2" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Overtime Efficiency" }), _jsx("span", { className: "font-medium text-blue-600", children: "-0.8%" })] }), _jsx(Progress, { value: 88.7, className: "h-2" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Staff Satisfaction" }), _jsx("span", { className: "font-medium text-green-600", children: "+3.2%" })] }), _jsx(Progress, { value: 91.4, className: "h-2" })] })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Department Performance" }), _jsx(CardDescription, { children: "Performance breakdown by department" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Clinical Services" }), _jsx("div", { className: "text-xs text-gray-600", children: "25 employees" })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-sm font-medium text-green-600", children: "92.3%" }), _jsx("div", { className: "text-xs text-gray-500", children: "Performance" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Rehabilitation" }), _jsx("div", { className: "text-xs text-gray-600", children: "12 employees" })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-sm font-medium text-blue-600", children: "89.7%" }), _jsx("div", { className: "text-xs text-gray-500", children: "Performance" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-3 border rounded", children: [_jsxs("div", { children: [_jsx("div", { className: "font-medium text-sm", children: "Administration" }), _jsx("div", { className: "text-xs text-gray-600", children: "8 employees" })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-sm font-medium text-purple-600", children: "85.1%" }), _jsx("div", { className: "text-xs text-gray-500", children: "Performance" })] })] })] }) })] })] })] }), _jsxs(TabsContent, { value: "summary", className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Total Hours" }), _jsx(Clock, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold", children: [Math.round(totals.totalHours * 10) / 10, "h"] }), _jsxs("p", { className: "text-xs text-muted-foreground", children: ["+", Math.round(totals.totalOvertimeHours * 10) / 10, "h overtime"] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Total Payroll" }), _jsx(DollarSign, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold", children: ["AED ", Math.round(totals.totalPay * 100) / 100] }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Gross amount" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Net Payroll" }), _jsx(TrendingUp, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-2xl font-bold", children: ["AED ", Math.round(totals.totalNetPay * 100) / 100] }), _jsx("p", { className: "text-xs text-muted-foreground", children: "After deductions" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Timesheets" }), _jsx(FileText, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: timesheets.length }), _jsxs("p", { className: "text-xs text-muted-foreground", children: [timesheets.filter((t) => t.approval_status === "approved")
                                                                    .length, " ", "approved"] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Payroll Breakdown" }), _jsx(CardDescription, { children: "Detailed breakdown by department and employee" })] }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: timesheets.map((timesheet) => (_jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { children: [_jsx("div", { className: "font-medium", children: timesheet.employee_name }), _jsxs("div", { className: "text-sm text-gray-500", children: [timesheet.department, " - ", timesheet.role] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "font-medium", children: ["AED ", timesheet.net_pay.toFixed(2)] }), _jsxs("div", { className: "text-sm text-gray-500", children: [timesheet.total_worked_hours, "h worked"] })] })] }, timesheet._id?.toString()))) }) })] })] }), _jsx(TabsContent, { value: "reports", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Generate Reports" }), _jsx(CardDescription, { children: "Generate payroll and timesheet reports for management" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(FileText, { className: "w-6 h-6" }), _jsx("span", { children: "Payroll Report" })] }), _jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(Calendar, { className: "w-6 h-6" }), _jsx("span", { children: "Attendance Summary" })] }), _jsxs(Button, { variant: "outline", className: "h-20 flex flex-col items-center gap-2", children: [_jsx(TrendingUp, { className: "w-6 h-6" }), _jsx("span", { children: "Cost Analysis" })] })] }) })] }) })] })] }) }));
}
