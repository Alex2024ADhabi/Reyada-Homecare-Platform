apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: reyada-rabbitmq
  namespace: reyada-homecare
spec:
  serviceName: "reyada-rabbitmq"
  replicas: 6
  selector:
    matchLabels:
      app: reyada-rabbitmq
  template:
    metadata:
      labels:
        app: reyada-rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: reyada-rabbitmq-secrets
              key: rabbitmq_user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: reyada-rabbitmq-secrets
              key: rabbitmq_password
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: reyada-rabbitmq-secrets
              key: erlang_cookie
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "3000m"
            memory: "6Gi"
        livenessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 60
          periodSeconds: 60
        readinessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 20
          periodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "gp2"
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: reyada-rabbitmq
  namespace: reyada-homecare
spec:
  selector:
    app: reyada-rabbitmq
  ports:
  - port: 5672
    targetPort: 5672
    name: amqp
  - port: 15672
    targetPort: 15672
    name: management
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reyada-websocket
  namespace: reyada-homecare
spec:
  replicas: 5
  selector:
    matchLabels:
      app: reyada-websocket
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: reyada-websocket
    spec:
      containers:
      - name: websocket
        image: ${ECR_REPOSITORY_URI}/reyada-websocket:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: REDIS_URL
          value: "redis://reyada-redis:6379"
        - name: RABBITMQ_URL
          value: "amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@reyada-rabbitmq:5672"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: reyada-secrets
              key: jwt_secret
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: reyada-rabbitmq-secrets
              key: rabbitmq_user
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: reyada-rabbitmq-secrets
              key: rabbitmq_password
      imagePullSecrets:
      - name: ecr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: reyada-websocket
  namespace: reyada-homecare
spec:
  selector:
    app: reyada-websocket
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reyada-websocket-ingress
  namespace: reyada-homecare
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: ${ACM_CERTIFICATE_ARN}
    alb.ingress.kubernetes.io/healthcheck-path: "/health"
    alb.ingress.kubernetes.io/success-codes: "200-399"
    alb.ingress.kubernetes.io/load-balancer-attributes: "idle_timeout.timeout_seconds=60"
    external-dns.alpha.kubernetes.io/hostname: "ws.reyada-homecare.ae"
    external-dns.alpha.kubernetes.io/ttl: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  rules:
  - host: ws.reyada-homecare.ae
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: reyada-websocket
            port:
              number: 8080
  tls:
  - hosts:
    - ws.reyada-homecare.ae
    secretName: reyada-ws-tls-secret