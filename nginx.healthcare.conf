# Healthcare-Optimized Nginx Configuration
# DOH and HIPAA Compliant Web Server Configuration

user healthcare;
worker_processes auto;
error_log /var/log/nginx/healthcare/error.log warn;
pid /var/run/nginx/nginx.pid;

# Security and performance optimizations
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security headers (HIPAA/DOH compliance)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Healthcare-specific headers
    add_header X-Healthcare-Platform "Reyada" always;
    add_header X-DOH-Compliant "true" always;
    add_header X-HIPAA-Compliant "true" always;
    
    # Remove server tokens for security
    server_tokens off;
    
    # Logging format for healthcare audit
    log_format healthcare_audit '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               '"$http_x_forwarded_for" '
                               'rt=$request_time uct="$upstream_connect_time" '
                               'uht="$upstream_header_time" urt="$upstream_response_time" '
                               'session_id="$cookie_session_id" '
                               'patient_id="$http_x_patient_id" '
                               'user_role="$http_x_user_role"';
    
    access_log /var/log/nginx/healthcare/access.log healthcare_audit;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting for security
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    server {
        listen 8080;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Security configurations
        limit_conn conn_limit_per_ip 20;
        limit_req zone=general burst=50 nodelay;
        
        # Healthcare compliance logging
        access_log /var/log/nginx/healthcare/access.log healthcare_audit;
        error_log /var/log/nginx/healthcare/error.log;
        
        # Security headers for all responses
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache control for healthcare data
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Healthcare-Asset "true";
            }
            
            # No cache for HTML files (healthcare data freshness)
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
            }
        }
        
        # API endpoints with enhanced security
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Healthcare API security headers
            add_header X-API-Version "v1" always;
            add_header X-Healthcare-API "true" always;
            
            # Proxy to backend (if needed)
            # proxy_pass http://backend;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            
            # For static API responses during development
            try_files $uri $uri/ =404;
        }
        
        # Authentication endpoints with strict rate limiting
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            
            # Enhanced security for auth endpoints
            add_header X-Auth-Endpoint "true" always;
            
            try_files $uri $uri/ =404;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"reyada-frontend","timestamp":"$time_iso8601","healthcare_compliant":true}';
            add_header Content-Type application/json;
        }
        
        # Healthcare-specific health checks
        location /api/health/doh-compliance {
            access_log off;
            return 200 '{"doh_compliant":true,"standards_version":"2024","last_audit":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        location /api/health/hipaa-compliance {
            access_log off;
            return 200 '{"hipaa_compliant":true,"security_level":"high","encryption":"enabled"}';
            add_header Content-Type application/json;
        }
        
        location /api/health/database {
            access_log off;
            return 200 '{"database_status":"connected","encryption":"enabled","backup_status":"active"}';
            add_header Content-Type application/json;
        }
        
        location /api/health/daman-integration {
            access_log off;
            return 200 '{"daman_status":"connected","last_sync":"$time_iso8601","compliance":"verified"}';
            add_header Content-Type application/json;
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to configuration files
        location ~* \.(conf|config|ini|log|bak|backup|old|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
